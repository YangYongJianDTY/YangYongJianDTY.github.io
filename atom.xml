<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>闲云野鹤</title>
  
  <subtitle>Goals determine what you are going to be.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yangyongjian.github.io/"/>
  <updated>2017-10-03T05:17:00.833Z</updated>
  <id>http://yangyongjian.github.io/</id>
  
  <author>
    <name>杨永健</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://yangyongjian.github.io/2017/10/02/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yangyongjian.github.io/2017/10/02/正则表达式/</id>
    <published>2017-10-02T08:20:30.000Z</published>
    <updated>2017-10-03T05:17:00.833Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是正则表达式"><a href="#什么是正则表达式" class="headerlink" title="什么是正则表达式"></a>什么是正则表达式</h1><p>正则表达式是用来判断“字符串”是否符合某个“样式”的，即这个“样式”的表达方式。</p><h1 id="正则表达式的使用"><a href="#正则表达式的使用" class="headerlink" title="正则表达式的使用"></a>正则表达式的使用</h1><h2 id="使用"><a href="#使用" class="headerlink" title="使用//"></a>使用<code>//</code></h2><p>可以使用<code>//</code>括住正则表达式的样式，当在程序中使用正则表达式时，这是最快速容易的方式。</p><h2 id="建立对象"><a href="#建立对象" class="headerlink" title="建立对象"></a>建立对象</h2><p>可以用类方法建立对象<code>Regexp.new(str)</code>这种写法。原来已经有了一个代表样式的字符串时，用这种方式建立正则表达式会比较方便。</p><h2 id="使用-r"><a href="#使用-r" class="headerlink" title="使用%r"></a>使用<code>%r</code></h2><p>当正则表达式内部用到<code>/</code>字符时，改用<code>%r</code>代替会比较方便。</p><h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h1><h2 id="常用元字符"><a href="#常用元字符" class="headerlink" title="常用元字符"></a>常用元字符</h2><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>.</td><td>匹配除换行符以外的任意字符</td></tr><tr><td>\w</td><td>匹配字母或数字或下划线</td></tr><tr><td>\s</td><td>匹配任意的空白符</td></tr><tr><td>\d</td><td>匹配数字</td></tr><tr><td>\b</td><td>匹配单词的开始或结束</td></tr><tr><td>^</td><td>匹配字符串的开始</td></tr><tr><td>$</td><td>匹配字符串的结束</td></tr></tbody></table><h2 id="常用限定符"><a href="#常用限定符" class="headerlink" title="常用限定符"></a>常用限定符</h2><table><thead><tr><th>代码/语法</th><th>说明</th></tr></thead><tbody><tr><td>*</td><td>重复零次或更多次</td></tr><tr><td>+</td><td>重复一次或更多次</td></tr><tr><td>?</td><td>重复零次或一次</td></tr><tr><td>{n}</td><td>重复n次</td></tr><tr><td>{n,}</td><td>重复n次或更多次</td></tr><tr><td>{n,m}</td><td>重复n到m次</td></tr><tr><td>*?</td><td>重复零次或更多次，但取最短的匹配结果</td></tr><tr><td>+?</td><td>重复一次或更多次，但取最短的匹配结果</td></tr><tr><td><code>\</code></td><td>列举多个候补条件，只要其中一个符合就匹配成功</td></tr></tbody></table><h2 id="常用反义词"><a href="#常用反义词" class="headerlink" title="常用反义词"></a>常用反义词</h2><table><thead><tr><th>代码/语法</th><th>说明</th></tr></thead><tbody><tr><td>\W</td><td>匹配任意不是字母，数字，下划线，汉字的字符</td></tr><tr><td>\S</td><td>匹配任意不是空白符的字符</td></tr><tr><td>\D</td><td>匹配任意非数字的字符</td></tr><tr><td>\B</td><td>匹配不是单词开头或结束的位置</td></tr><tr><td><code>[^x]</code></td><td>匹配除了x以外的任意字符</td></tr><tr><td><code>[^aeiou]</code></td><td>匹配除了<code>aeiou</code>这几个字母以外的任意字符</td></tr><tr><td><code>[]</code></td><td>匹配其中任意一个字符</td></tr><tr><td><code>[0-9a-zA-Z]</code></td><td>匹配0-9、26个大小写字母</td></tr></tbody></table><h2 id="常用修正符"><a href="#常用修正符" class="headerlink" title="常用修正符"></a>常用修正符</h2><table><thead><tr><th>代码/语法</th><th>说明</th></tr></thead><tbody><tr><td>i</td><td>表示在进行匹配的时候不区分大小写</td></tr><tr><td>m</td><td>多行识别,即将字符串视为多行,不管是那行都能匹配</td></tr><tr><td>s</td><td>将字符串视为单行,转义回车换行符作为普通字符</td></tr><tr><td>g</td><td>表示全局匹配</td></tr><tr><td>x</td><td>将模式中的空白忽略</td></tr><tr><td>A</td><td>强制从目标字符串开头匹配</td></tr><tr><td>D</td><td>强制尾部无任何内容.若使用<code>$</code>限制结尾字符,则不允许结尾有换行</td></tr><tr><td>U</td><td>禁止贪婪匹配,只匹配最近的一个字符串(不重复匹配)</td></tr><tr><td>e</td><td>配合PHP函数<code>preg_replace()</code>使用,可以把匹配来的字符串当作正则表达式执行</td></tr></tbody></table><h2 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h2><p><code>\</code>后面接上 <code>.</code>、<code>^</code>、<code>$</code>、<code>[</code> 这些英文、数字以外的转义字符时，这些字符将不再具备转义字符的作用了，而可以去匹配这些字符本身。</p><h1 id="常用正则表达式"><a href="#常用正则表达式" class="headerlink" title="常用正则表达式"></a>常用正则表达式</h1><h2 id="数字表达式"><a href="#数字表达式" class="headerlink" title="数字表达式"></a>数字表达式</h2><ol><li>数字：<code>^[0-9]*$</code></li><li>n位的数字：<code>^\d{n}$</code></li><li>至少n位的数字：<code>^\d{n,}$</code></li><li>m-n位的数字：<code>^\d{m,n}$</code></li><li>零和非零开头的数字：<code>^(0|[1-9][0-9]*)$</code></li><li>非零开头的最多带两位小数的数字：<code>^([1-9][0-9]*)+(.[0-9]{1,2})?$</code></li><li>带1-2位小数的正数或负数：<code>^(\-)?\d+(\.\d{1,2})?$</code></li><li>正数、负数、和小数：<code>^(\-|\+)?\d+(\.\d+)?$</code></li><li>有两位小数的正实数：<code>^[0-9]+(.[0-9]{2})?$</code></li><li>有1~3位小数的正实数：<code>^[0-9]+(.[0-9]{1,3})?$</code></li><li>非零的正整数：<code>^[1-9]\d*$</code> 或 <code>^([1-9][0-9]*){1,3}$</code> 或 <code>^\+?[1-9][0-9]*$</code></li><li>非零的负整数：<code>^\-[1-9][]0-9&quot;*$</code> 或 <code>^-[1-9]\d*$</code></li><li>非负整数：<code>^\d+$</code> 或 <code>^[1-9]\d*|0$</code></li><li>非正整数：<code>^-[1-9]\d*|0$</code> 或 <code>^((-\d+)|(0+))$</code></li><li>非负浮点数：<code>^\d+(\.\d+)?$</code> 或 <code>^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$</code></li><li>非正浮点数：<code>^((-\d+(\.\d+)?)|(0+(\.0+)?))$</code> 或 <code>^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$</code></li><li>正浮点数：<code>^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$</code> 或 <code>^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$</code></li><li>负浮点数：<code>^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$</code> 或 <code>^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$</code></li><li>浮点数：<code>^(-?\d+)(\.\d+)?$</code> 或 <code>^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$</code></li></ol><h2 id="字符串表达式"><a href="#字符串表达式" class="headerlink" title="字符串表达式"></a>字符串表达式</h2><ol><li>汉字：<code>^[\u4e00-\u9fa5]{0,}$</code></li><li>英文和数字：<code>^[A-Za-z0-9]+$</code> 或 <code>^[A-Za-z0-9]{4,40}$</code></li><li>长度为3-20的所有字符：<code>^.{3,20}$</code></li><li>由26个英文字母组成的字符串：<code>^[A-Za-z]+$</code></li><li>由26个大写英文字母组成的字符串：<code>^[A-Z]+$</code></li><li>由26个小写英文字母组成的字符串：<code>^[a-z]+$</code></li><li>由数字和26个英文字母组成的字符串：<code>^[A-Za-z0-9]+$</code></li><li>由数字、26个英文字母或者下划线组成的字符串：<code>^\w+$</code> 或 <code>^\w{3,20}$</code></li><li>中文、英文、数字包括下划线：<code>^[\u4E00-\u9FA5A-Za-z0-9_]+$</code></li><li>中文、英文、数字但不包括下划线等符号：<code>^[\u4E00-\u9FA5A-Za-z0-9]+$</code> 或 <code>^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$</code></li><li>可以输入含有<code>^%&amp;&#39;,;=?$\&quot;</code>等字符：<code>[^%&amp;&#39;,;=?$\x22]+</code></li><li>禁止输入含有~的字符：<code>[^~\x22]+</code></li></ol><h2 id="特殊需求表达式"><a href="#特殊需求表达式" class="headerlink" title="特殊需求表达式"></a>特殊需求表达式</h2><ol><li>Email地址：<code>^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$</code></li><li>域名：<code>[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?</code></li><li>InternetURL：<code>[a-zA-z]+://[^\s]*</code> 或 <code>^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]*)?$</code></li><li>手机号码：<code>^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$</code></li><li>电话号码：<code>^(\(\d{3,4}-)|\d{3.4}-)?\d{7,8}$</code></li><li>国内电话号码(051-44052222、0211-8788822)：<code>\d{3}-\d{8}|\d{4}-\d{7}</code></li><li>身份证号(15位、18位数字)：<code>^\d{15}|\d{18}$</code></li><li>短身份证号码(数字、字母x结尾)：<code>^([0-9]){7,18}(x|X)?$</code> 或 <code>^\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$</code></li><li>帐号是否合法：<code>^[a-zA-Z][a-zA-Z0-9_]{4,15}$</code> (字母开头，允许5-16字节，允许字母数字下划线)</li><li>密码：<code>^[a-zA-Z]\w{5,17}$</code> (以字母开头，长度在6~18之间，只能包含字母、数字和下划线)</li><li>强密码：<code>^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$</code> (必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)</li><li>日期格式：<code>^\d{4}-\d{1,2}-\d{1,2}</code></li><li>一年的12个月(01～09和1～12)：<code>^(0?[1-9]|1[0-2])$</code></li><li>一个月的31天(01～09和1～31)：<code>^((0?[1-9])|((1|2)[0-9])|30|31)$</code></li><li>xml文件：<code>^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$</code></li><li>中文字符的正则表达式：<code>[\u4e00-\u9fa5]</code></li><li>双字节字符：<code>[^\x00-\xff]</code> (包括汉字在内，可以用来计算字符串的长度，一个双字节字符长度计2，ASCII字符计1)</li><li>空白行的正则表达式：<code>\n\s*\r</code> (可以用来删除空白行)</li><li>HTML标记的正则表达式：<code>&lt;(\S*?)[^&gt;]*&gt;.*?&lt;/\1&gt;|&lt;.*? /&gt;</code> (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)</li><li>首尾空白字符的正则表达式：<code>^\s*|\s*$</code> 或 <code>(^\s*)|(\s*$)</code> (可以用来删除行首行尾的空白字符，包括空格、制表符、换页符等等，非常有用的表达式)</li><li>腾讯QQ号：<code>[1-9][0-9]{4,}</code> (腾讯QQ号从10000开始)</li><li>中国邮政编码：<code>[1-9]\d{5}(?!\d)</code> (中国邮政编码为6位数字)</li><li>IP地址：<code>\d+\.\d+\.\d+\.\d+</code> (提取IP地址时有用)</li><li>IP地址：<code>((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))</code></li></ol><h2 id="钱的输入格式详解"><a href="#钱的输入格式详解" class="headerlink" title="钱的输入格式详解"></a>钱的输入格式详解</h2><ul><li>没小数、没逗号(“10000”)： <code>^(0|[1-9][0-9]*)$</code></li><li>可有小数、没逗号(“10000.00”)： <code>^[0-9]+(.[0-9]{1,2})?$</code></li><li>可有小数、有逗号(“10,000.00”)： <code>^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$</code></li><li>可有小数、可有逗号： <code>^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是正则表达式&quot;&gt;&lt;a href=&quot;#什么是正则表达式&quot; class=&quot;headerlink&quot; title=&quot;什么是正则表达式&quot;&gt;&lt;/a&gt;什么是正则表达式&lt;/h1&gt;&lt;p&gt;正则表达式是用来判断“字符串”是否符合某个“样式”的，即这个“样式”的表达方式。&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="前端" scheme="http://yangyongjian.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Regexp" scheme="http://yangyongjian.github.io/tags/Regexp/"/>
    
  </entry>
  
</feed>
